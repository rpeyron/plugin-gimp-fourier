name: CI
on: [push,pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          {gimp: gimp2, apt: "libgimp2.0-dev", configure: "" },
# Disable linux build in CI until gimp3 is available in a runner build image (use ci_gimp3_linux branch to test)
#          {gimp: gimp3, apt: "libgimp-3.0-dev", configure: "--enable-gimp3-fourier" },
        ]
    steps:
      - uses: actions/checkout@v4
      - name: Create configure
        run: |
          sudo apt-get update -y
          sudo apt-get install autoconf automake libtool gcc libfftw3-dev ${{ matrix.apt }}
          autoreconf -i
          automake
      - name: Check configure & make with --disable-silent-rules
        run: | 
          ./configure ${{ matrix.configure }} --disable-silent-rules 
          make
      - name: Check install/uninstall/distcheck (with --disable-silent-rules)
        run: | 
          make install-user
          make uninstall-user
          sudo make install
          sudo make uninstall
          make distcheck
      - name: Build deb package (with --enable-silent-rules)
        run: |
          make clean
          ./configure ${{ matrix.configure }} --enable-silent-rules
          make deb_${{ matrix.gimp }}
          cp ../gimp-plugin-fourier_* .
      - name: Build dist
        run: ./configure && make dist
      - uses: actions/upload-artifact@v4
        with:
          name: fourier_gimp_linux_${{ matrix.gimp }}
          path: |
            gimp-plugin-fourier_*
            gimp-plugin-fourier-*.tar.gz
  windows:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include: [
          {msystem: MINGW32, toolchain: mingw-w64-i686, version: x32, gimp: "gimp", gimptool: "gimptool-2.0" },
          {msystem: MINGW64, toolchain: mingw-w64-x86_64, version: x64, gimp: "gimp", gimptool: "gimptool-2.0" },
          {msystem: MINGW64, toolchain: mingw-w64-x86_64, version: x64, gimp: "gimp3", gimptool: "gimptool" },
        ]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Install msys2 build environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
#        update: false
        update: true
        install: base-devel git ${{ matrix.toolchain }}-toolchain ${{ matrix.toolchain }}-${{ matrix.gimp }} ${{ matrix.toolchain }}-fftw ${{ matrix.toolchain }}-gettext-tools

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v4

    - name: Build plugin
      shell: msys2 {0}
      run: |
        echo $( ${{ matrix.gimptool }} -n --build fourier.c) -lfftw3 -O3 | sh
        mkdir -p artifacts/fourier
        cp fourier.exe artifacts/fourier/
        cp `which libfftw3-3.dll` artifacts/fourier/

    - name: Build locales
      if: ${{ matrix.gimp }} == "gimp3"
      shell: msys2 {0}
      run: |
        for L in fr pt; do mkdir -p artifacts/fourier/locale/$L/LC_MESSAGES/; msgfmt -c -v -o artifacts/fourier/locale/$L/LC_MESSAGES/gimp30-fourier.mo po/$L.po; done
  
    - name: Get GIMP version
      shell: msys2 {0}
      run: echo "GIMPVER=$(pacman -Q  ${{ matrix.toolchain }}-${{ matrix.gimp }} | cut -d ' ' -f 2)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v4
      with:
        name: fourier_gimp${{ env.GIMPVER }}_${{ matrix.version }}
        # Using wildcard to force using fourier directory structure
        path: |
          artifacts/*/
